a:3:{s:8:"etagFile";s:32:"4b48866c7263154752b787feff5156c5";s:4:"file";s:49:"assets/vendor/ckeditor/core/htmlparser/element.js";s:7:"content";s:3476:"ï»¿'use strict';CKEDITOR.htmlParser.element=function(name,attributes){this.name=name;this.attributes=attributes||{};this.children=[];var realName=name||'',prefixed=realName.match(/^cke:(.*)/);prefixed&&(realName=prefixed[1]);var isBlockLike=!!(CKEDITOR.dtd.$nonBodyContent[realName]||CKEDITOR.dtd.$block[realName]||CKEDITOR.dtd.$listItem[realName]||CKEDITOR.dtd.$tableContent[realName]||CKEDITOR.dtd.$nonEditable[realName]||realName=='br');this.isEmpty=!!CKEDITOR.dtd.$empty[name];this.isUnknown=!CKEDITOR.dtd[name];this._={isBlockLike:isBlockLike,hasInlineStarted:this.isEmpty||!isBlockLike};};CKEDITOR.htmlParser.cssStyle=function(){var styleText,arg=arguments[0],rules={};styleText=arg instanceof CKEDITOR.htmlParser.element?arg.attributes.style:arg;(styleText||'').replace(/&quot;/g,'"').replace(/\s*([^ :;]+)\s*:\s*([^;]+)\s*(?=;|$)/g,function(match,name,value){name=='font-family'&&(value=value.replace(/["']/g,''));rules[name.toLowerCase()]=value;});return{rules:rules,populate:function(obj){var style=this.toString();if(style){obj instanceof CKEDITOR.dom.element?obj.setAttribute('style',style):obj instanceof CKEDITOR.htmlParser.element?obj.attributes.style=style:obj.style=style;}},toString:function(){var output=[];for(var i in rules)
rules[i]&&output.push(i,':',rules[i],';');return output.join('');}};};(function(){var sortAttribs=function(a,b){a=a[0];b=b[0];return a<b?-1:a>b?1:0;},fragProto=CKEDITOR.htmlParser.fragment.prototype;CKEDITOR.htmlParser.element.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node(),{type:CKEDITOR.NODE_ELEMENT,add:fragProto.add,clone:function(){return new CKEDITOR.htmlParser.element(this.name,this.attributes);},filter:function(filter){var element=this,originalName,name;if(!element.parent)
filter.onRoot(element);while(true){originalName=element.name;if(!(name=filter.onElementName(originalName))){this.remove();return false;}
element.name=name;if(!(element=filter.onElement(element))){this.remove();return false;}
if(element!==this){this.replaceWith(element);return false;}
if(element.name==originalName)
break;if(element.type!=CKEDITOR.NODE_ELEMENT){this.replaceWith(element);return false;}
if(!element.name){this.replaceWithChildren();return false;}}
var attributes=element.attributes,a,value,newAttrName;for(a in attributes){newAttrName=a;value=attributes[a];while(true){if(!(newAttrName=filter.onAttributeName(a))){delete attributes[a];break;}else if(newAttrName!=a){delete attributes[a];a=newAttrName;continue;}else
break;}
if(newAttrName){if((value=filter.onAttribute(element,newAttrName,value))===false)
delete attributes[newAttrName];else
attributes[newAttrName]=value;}}
if(!element.isEmpty)
this.filterChildren(filter);return true;},filterChildren:fragProto.filterChildren,writeHtml:function(writer,filter){if(filter)
this.filter(filter);var name=this.name,attribsArray=[],attributes=this.attributes,attrName,attr,i,l;writer.openTag(name,attributes);for(attrName in attributes)
attribsArray.push([attrName,attributes[attrName]]);if(writer.sortAttributes)
attribsArray.sort(sortAttribs);for(i=0,l=attribsArray.length;i<l;i++){attr=attribsArray[i];writer.attribute(attr[0],attr[1]);}
writer.openTagClose(name,this.isEmpty);this.writeChildrenHtml(writer);if(!this.isEmpty)
writer.closeTag(name);},writeChildrenHtml:fragProto.writeChildrenHtml,replaceWithChildren:function(){var children=this.children;for(var i=children.length;i;)
children[--i].insertAfter(this);this.remove();},forEach:fragProto.forEach});})();";}